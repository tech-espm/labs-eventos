
<div class="row">
	<div class="col-lg-12">
		<div class="panel panel-default">
			<div class="panel-body dataTable_wrapper">
				<table class="table table-striped table-hover" id="tabela-locais"></table>
			</div>
		</div>
	</div>
</div>

<script type="text/javascript">
	//<![CDATA[
	"use strict";

	// Como não podemos utilizar o contentFor("scripts"), porque o alterar.ejs
	// será utilizado como include para outra página, precisamos executar a
	// função apenas quando o documento estiver ok
	$(function () {
		carregarLocais(<%- eventoLocais %>, <%- locais %>);

		var tabela = prepareDataTable("tabela-locais", {
			order: [[0, "asc"]],
			deferRender: true,
			columns: [
				{ title: "Nome", "class": "col-50", render: encode, data: "nome" },
				{ title: "Capacidade Real", "class": "col-min", data: "capacidade_real" },
				{ title: "Unidade", "class": "col-25", render: encode, data: "sigla_unidade" },
				{ title: "Capacidade", "class": "col-min", searchable: false, orderable: false, render: function (v, type, row) { return "<input type=\"number\" class=\"form-control upper\" value=\"" + row.capacidade + "\" style=\"width: 7em; display: inline-block;\" min=\"0\" max=\"999\" /> <button title=\"Alterar capacidade\" type=\"button\" data-capacidade=\"1\" class=\"btn btn-outline btn-primary btn-evento-local-capacidade\"><i class=\"fa fa-nomargin fa-save\"></i></button>"; } },
				{ title: "Associado", "class": "col-min", data: function (row, type, set, meta) { return (locaisSelecionados[row.id] ? "SIM" : "NÃO"); } },
				{ title: "Associação", "class": "col-min", searchable: false, orderable: false, data: "id", render: function (v, type, row) { return "<button title=\"Associar ao evento\" type=\"button\" class=\"btn btn-outline btn-success btn-evento-associar\"><i class=\"fa fa-nomargin fa-check\"></i></button> <button title=\"Desassociar do evento\" type=\"button\" data-excluir=\"1\" class=\"btn btn-outline btn-danger btn-evento-desassociar\"><i class=\"fa fa-nomargin fa-times\"></i></button>"; } },
			],
			data: locais,
			rowCallback: function (row, data) {
				if (locaisSelecionados[data.id])
					$(row).addClass("col-h2");
			}
		});

		var trClicada;

		$("#tabela-locais").on("click", "tbody button", function () {
			if (JsonWebApi.active)
				return;

			var local = tabela.row(trClicada = this.parentNode.parentNode).data();

			if (this.getAttribute("data-excluir")) {
				Notification.wait();

				JsonWebApi.post("/api/local/eventoDesassociar", { ideventolocal: local.ideventolocal }, function (response) {
					if (response.success) {
						local.ideventolocal = 0;
						delete locaisSelecionados[local.id];
						atualizarEventoLocais();
						Notification.success("Local desassociado do evento com sucesso! \uD83D\uDE04");
						$(trClicada).removeClass("col-h2");
						tabela.row(trClicada).invalidate().draw();
					} else {
						Notification.error(response.value, true);
					}
					trClicada = null;
				});
			} else if (this.getAttribute("data-capacidade")) {
				var capacidade = parseInt(trClicada.getElementsByTagName("input")[0].value);
				if (isNaN(capacidade) || capacidade < 0) {
					Notification.error("Capacidade inválida", true);
					trClicada = null;
					return;
				}

				local.capacidade = capacidade;

				if (!locaisSelecionados[local.id]) {
					Notification.error("O local deve ser associado ao evento para que sua capacidade possa ser alterada", true);
					return;
				}

				Notification.wait();

				JsonWebApi.post("/api/local/eventoAlterarCapacidade", { ideventolocal: local.ideventolocal, capacidade: capacidade }, function (response) {
					if (response.success) {
						if (response.value)
							Notification.success("Capacidade do local para o evento alterada com sucesso! \uD83D\uDE04");
						else
							Notification.error("O local deve ser associado ao evento para que sua capacidade possa ser alterada", true);
					} else {
						Notification.error(response.value, true);
					}
					trClicada = null;
				});
			} else {
				var capacidade = parseInt(trClicada.getElementsByTagName("input")[0].value);
				if (isNaN(capacidade) || capacidade < 0) {
					Notification.error("Capacidade inválida", true);
					trClicada = null;
					return;
				}

				local.capacidade = capacidade;

				Notification.wait();

				JsonWebApi.post("/api/local/eventoAssociar", { idlocal: local.id, capacidade: local.capacidade }, function (response) {
					if (response.success) {
						local.ideventolocal = parseInt(response.value);
						locaisSelecionados[local.id] = local;
						atualizarEventoLocais();
						Notification.success("Local associado ao evento com sucesso! \uD83D\uDE04");
						$(trClicada).addClass("col-h2");
						tabela.row(trClicada).invalidate().draw();
					} else {
						Notification.error(response.value, true);
					}
					trClicada = null;
				});
			}
		});
	});

	//]]>
</script>
