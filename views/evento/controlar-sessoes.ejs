
<div class="row">
	<div class="col-lg-12">
		<div class="panel panel-default">
			<div class="panel-body dataTable_wrapper">
				<div class="col-xs-space-bottom">
					<button class="btn btn-primary" type="button" onclick="criarSessao()"><i class="fa fa-plus"></i> Criar Sessão...</button>
				</div>
				<table class="table table-striped table-hover" id="tabela-sessoes"></table>
			</div>
		</div>
	</div>
</div>

<div class="modal fade" tabindex="-1" role="dialog" id="modalAlterarSessao">
	<div class="modal-dialog modal-lg" role="document">
		<form class="modal-content" id="formAlterarSessao" method="post">
			<div class="modal-header">
				<button type="button" class="close" data-dismiss="modal" aria-label="Fechar"><span aria-hidden="true">&times;</span></button>
				<h4 class="modal-title">Sessão</h4>
			</div>
			<div class="modal-body">
				<div class="row">
					<div class="col-xs-6">
						<div class="form-group">
							<label for="cbSessaoData">Data</label>
							<select id="cbSessaoData" name="cbSessaoData" class="form-control upper" size="1"><option value="">SELECIONE...</option></select>
						</div>
					</div>
					<div class="col-xs-6">
						<div class="form-group">
							<label for="cbSessaoHorario">Horário</label>
							<select id="cbSessaoHorario" name="cbSessaoHorario" class="form-control upper" size="1"><option value="">SELECIONE...</option></select>
						</div>
					</div>
				</div>
				<div class="form-group">
					<label for="cbSessaoLocal">Local</label>
					<select id="cbSessaoLocal" name="cbSessaoLocal" class="form-control upper" size="1"><option value="">SELECIONE...</option></select>
				</div>
				<div class="form-group">
					<label for="txtSessaoNome">Nome</label>
					<input id="txtSessaoNome" name="txtSessaoNome" type="text" class="form-control upper" maxlength="100" />
				</div>
				<div class="row">
					<div class="col-sm-4">
						<div class="form-group">
							<label for="txtSessaoNomeCurto">Nome Curto</label>
							<input id="txtSessaoNomeCurto" name="txtSessaoNomeCurto" type="text" class="form-control upper" maxlength="45" />
						</div>
					</div>
					<div class="col-sm-4">
						<div class="form-group">
							<label for="cbSessaoOcultar">Ocultar</label>
							<select id="cbSessaoOcultar" name="cbSessaoOcultar" class="form-control upper" size="1"><option value="0">NÃO</option><option value="1">SIM</option></select>
						</div>
					</div>
					<div class="col-sm-4">
						<div class="form-group">
							<label for="cbSessaoCurso">Curso Âncora</label>
							<select id="cbSessaoCurso" name="cbSessaoCurso" class="form-control upper" size="1"><option value="">SELECIONE...</option></select>
						</div>
					</div>
				</div>
				<div class="row">
					<div class="col-sm-4">
						<div class="form-group">
							<label for="cbSessaoFormato">Formato</label>
							<select id="cbSessaoFormato" name="cbSessaoCurso" class="form-control upper" size="1"><option value="">SELECIONE...</option></select>
						</div>
					</div>
					<div class="col-sm-4">
						<div class="form-group">
							<label for="cbSessaoTipo">Tipo de Sessão</label>
							<select id="cbSessaoTipo" name="cbSessaoTipo" class="form-control upper" size="1"><option value="">SELECIONE...</option></select>
						</div>
					</div>
					<div class="col-sm-4">
						<div class="form-group">
							<label for="cbSessaoVertical">Vertical</label>
							<select id="cbSessaoVertical" name="cbSessaoVertical" class="form-control upper" size="1"><option value="">SELECIONE...</option></select>
						</div>
					</div>
				</div>
				<div class="form-group">
					<label for="txtSessaoPublicoAlvo">Público-Alvo</label>
					<input id="txtSessaoPublicoAlvo" name="txtSessaoPublicoAlvo" type="text" class="form-control upper" maxlength="100" />
				</div>
				<div class="panel panel-default no-margin-bottom">
					<div class="panel-heading">
						Palestrantes
					</div>
					<div class="panel-body">
						<div class="row">
							<div class="col-sm-6 col-sm-space-bottom">
								<button class="btn btn-primary btn-block" type="button" onclick="adicionarPalestrante()"><i class="fa fa-plus"></i> Adicionar</button>
							</div>
							<div class="col-sm-6">
								<select id="cbSessaoPalestrante" name="cbSessaoPalestrante" class="form-control upper" size="1"><option value="">SELECIONE...</option></select>
							</div>
						</div>
						<div class="table-responsive">
							<table id="tabelaSessaoPalestrante" class="table table-striped table-hover no-margin-bottom" style="display: none;">
								<thead>
									<tr>
										<th></th>
										<th></th>
										<th class="col-50">Nome</th>
										<th class="col-50">Empresa</th>
										<th></th>
									</tr>
								</thead>
								<tbody id="tabelaSessaoPalestranteBody" class="content-section"></tbody>
							</table>
						</div>
					</div>
				</div>
			</div>
			<div class="modal-footer">
				<button type="submit" class="btn btn-primary"><i class="fa fa-check"></i> <span id="lblAlterarSessao">Criar Sessão</span></button>
				<button type="button" class="btn btn-outline btn-default" data-dismiss="modal"><i class="fa fa-times"></i> Cancelar</button>
			</div>
		</form>
	</div>
</div>

<div class="modal fade" tabindex="-1" role="dialog" id="modalExcluirSessao">
	<div class="modal-dialog" role="document">
		<div class="modal-content">
			<div class="modal-header">
				<button type="button" class="close" data-dismiss="modal" aria-label="Fechar"><span aria-hidden="true">&times;</span></button>
				<h4 class="modal-title">Oops...</h4>
			</div>
			<div class="modal-body">
				<p>
					Tem certeza que deseja excluir a sessão <span id="lblExcluirSessao"></span>? Essa operação <b class="col-h">NÃO</b> pode ser desfeita!
					<br />
					<b class="col-h">Se houverem inscritos na sessão, suas inscrições também serão excluídas!</b>
				</p>
				<p>
					Para confirmar a exclusão, por favor, digite abaixo o nome da sessão conforme exibido acima:
				</p>
				<div class="form-group">
					<label for="txtModalExcluirSessao">Nome da sessão</label>
					<input type="text" class="form-control upper" spellcheck="false" autocomplete="off" id="txtModalExcluirSessao" />
				</div>
			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-danger" onclick="excluirSessao()"><i class="fa fa-check"></i> Excluir</button>
				<button type="button" class="btn btn-outline btn-default" data-dismiss="modal"><i class="fa fa-times"></i> Cancelar</button>
			</div>
		</div>
	</div>
</div>

<script type="text/javascript">
	//<![CDATA[
	"use strict";

	// Como não podemos utilizar o contentFor("scripts"), porque o alterar.ejs
	// será utilizado como include para outra página, precisamos executar a
	// função apenas quando o documento estiver ok
	$(function () {
		var idevento = <%- idevento %>;
		var extensaoImagem = "<%- extensaoImagem %>";
		carregarDatas(<%- datas %>);
		carregarEmpresas(<%- empresas %>);
		carregarHorarios(<%- horarios %>);
		carregarLocais(<%- eventoLocais %>, <%- locais %>);
		carregarPalestrantes(<%- palestrantes %>);
		carregarCursos(<%- cursos %>);
		carregarFormatos(<%- formatos %>);
		carregarTipoSessoes(<%- tipoSessoes %>);
		carregarVerticais(<%- verticais %>);
		carregarSessoes(<%- sessoes %>);

		var tabela = prepareDataTable("tabela-sessoes", {
			order: [],
			deferRender: true,
			columns: [
				{ title: "Data", "class": "col-min", "type": "customdate", data: "data" },
				{ title: "Início", "class": "col-min", "type": "customtime", render: encode, data: "inicio" },
				{ title: "Término", "class": "col-min", "type": "customtime", render: encode, data: "termino" },
				{ title: "Local", render: encode, data: "nome_local" },
				{ title: "Unidade", render: encode, data: "sigla_unidade" },
				{ title: "Nome", render: encode, data: "nome" },
				{ title: "Ocultar", "class": "col-min text-center", data: "ocultar", render: function (v, type, row) { return (v ? "<span class=\"col-h\">SIM</span>" : "NÃO"); } },
				{ title: "Curso Âncora", render: encode, data: "nome_curso" },
				{ title: "Formato", render: encode, data: "nome_formato" },
				{ title: "Tipo", render: encode, data: "nome_tipo" },
				{ title: "Vertical", render: encode, data: "nome_vertical" },
				{ title: "Público-Alvo", render: encode, data: "publico_alvo" },
				{ title: "", "class": "col-min", searchable: false, orderable: false, data: "id", render: function (v, type, row) { return "<button title=\"Editar\" type=\"button\" class=\"btn btn-outline btn-primary\"><i class=\"fa fa-nomargin fa-edit\"></i></button> <button title=\"Excluir\" type=\"button\" data-excluir=\"1\" class=\"btn btn-outline btn-danger\"><i class=\"fa fa-nomargin fa-times\"></i></button>"; } },
			],
			data: eventoSessoes
		});

		window.adicionarPalestrante = function (id) {
			if (JsonWebApi.active)
				return;

			if (!id)
				id = parseInt($("#cbSessaoPalestrante").val());

			var palestrante = eventoPalestrantesPorId[id];

			if (!palestrante || $("#tabelaSessaoPalestranteBody [data-id=" + id + "]").length)
				return;

			$("#tabelaSessaoPalestranteBody").append(
				'<tr class="ui-sortable-handle" data-id="' + id + '">' +
				'<td class="col-min content-enum"></td>' +
				'<td class="col-min"><img alt="Imagem da Palestrante" style="max-width: 100px; max-height: 75px;" src="/evt/' + idevento + '/palestrantes/' + id + '.' + extensaoImagem + '?v=' + palestrante.versao + '"></td>' +
				'<td class="col-50">' + encode(palestrante.nome) + '</td>' +
				'<td class="col-50">' + encode(palestrante.nome_empresa) + '</td>' +
				'<td class="col-min"><button type="button" title="Excluir" class="btn btn-outline btn-danger" onclick="removerPalestrante(this)"><i class="fa fa-nomargin fa-trash-o"></i></button></td>' +
				'</tr>');

			$("#tabelaSessaoPalestrante").show();
		};

		window.removerPalestrante = function (btn) {
			if (JsonWebApi.active)
				return;

			var tr = btn.parentNode.parentNode,
				tabelaSessaoPalestranteBody = tr.parentNode;

			tabelaSessaoPalestranteBody.removeChild(tr);

			if (!tabelaSessaoPalestranteBody.childNodes.length)
				$("#tabelaSessaoPalestrante").hide();
		};

		var trClicada;

		prepareCbSearch(_("cbSessaoData"));
		prepareCbSearch(_("cbSessaoHorario"));
		prepareCbSearch(_("cbSessaoLocal"));
		prepareCbSearch(_("cbSessaoCurso"));
		prepareCbSearch(_("cbSessaoFormato"));
		prepareCbSearch(_("cbSessaoTipo"));
		prepareCbSearch(_("cbSessaoVertical"));
		prepareCbSearch(_("cbSessaoPalestrante"));
		$("#tabelaSessaoPalestranteBody").sortable().disableSelection();

		$("#modalAlterarSessao").on("show.bs.modal", function () {
			var i, sessao = (trClicada ? tabela.row(trClicada).data() : null);
			preencherCb(_("cbSessaoData"), eventoDatas, sessao ? sessao.ideventodata : "0", function (e) { return format2(e.dia) + "/" + format2(e.mes) + "/" + e.ano; });
			preencherCb(_("cbSessaoHorario"), eventoHorarios, sessao ? sessao.ideventohorario : "0", function (e) { return e.inicio + " - " + e.termino; });
			preencherCb(_("cbSessaoLocal"), eventoLocais, sessao ? sessao.ideventolocal : "0", function (e) { return e.nome + " (" + e.sigla_unidade + ")"; }, "ideventolocal");
			$("#txtSessaoNome").val(sessao ? sessao.nome : "");
			$("#txtSessaoNomeCurto").val(sessao ? sessao.nome_curto : "");
			$("#cbSessaoOcultar").val(sessao ? sessao.ocultar : "0");
			preencherCb(_("cbSessaoCurso"), eventoCursos, sessao ? sessao.idcurso : "0");
			preencherCb(_("cbSessaoFormato"), eventoFormatos, sessao ? sessao.idformato : "0");
			preencherCb(_("cbSessaoTipo"), eventoTipoSessoes, sessao ? sessao.idtiposessao : "0");
			preencherCb(_("cbSessaoVertical"), eventoVerticais, sessao ? sessao.idvertical : "0");
			$("#txtSessaoPublicoAlvo").val(sessao ? sessao.publico_alvo : "");
			preencherCb(_("cbSessaoPalestrante"), eventoPalestrantes, "0");
			$("#tabelaSessaoPalestranteBody").empty();
			$("#tabelaSessaoPalestrante").hide();
			if (sessao) {
				for (i = 0; i < sessao.idspalestrante.length; i++)
					adicionarPalestrante(sessao.idspalestrante[i]);
			}
		});

		$("#modalAlterarSessao").on("shown.bs.modal", function () {
			$("#cbSessaoData").focus();
		});

		$("#tabela-sessoes").on("click", "tbody button", function () {
			if (JsonWebApi.active)
				return;

			var sessao = tabela.row(trClicada = this.parentNode.parentNode).data();

			if (this.getAttribute("data-excluir")) {
				$("#lblExcluirSessao").text(sessao.nome);

				$("#txtModalExcluirSessao").val("");

				$("#modalExcluirSessao").modal({
					backdrop: "static",
					keyboard: true
				});
			} else {
				resetForm("#formAlterarSessao");

				$("#lblAlterarSessao").text("Salvar Alterações");

				$("#modalAlterarSessao").modal({
					backdrop: "static",
					keyboard: true
				});
			}
		});

		function preencherDadosSessao(s) {
			var tmp = eventoDatasPorId[s.ideventodata];
			s.data = format2(tmp.dia) + "/" + format2(tmp.mes) + "/" + tmp.ano;
			tmp = eventoHorariosPorId[s.ideventohorario];
			s.inicio = tmp.inicio;
			s.termino = tmp.termino;
			tmp = eventoLocaisPorIdEventoLocal[s.ideventolocal];
			s.idlocal = tmp.id;
			s.nome_local = tmp.nome;
			s.sigla_unidade = tmp.sigla_unidade;
			tmp = eventoCursosPorId[s.idcurso];
			s.nome_curso = tmp.nome;
			tmp = eventoFormatosPorId[s.idformato];
			s.nome_formato = tmp.nome;
			tmp = eventoTipoSessoesPorId[s.idtiposessao];
			s.nome_tipo = tmp.nome;
			tmp = eventoVerticaisPorId[s.idvertical];
			s.nome_vertical = tmp.nome;
		}

		$("#formAlterarSessao").validate({
			rules: {
				cbSessaoData: {
					required: true
				},
				cbSessaoHorario: {
					required: true
				},
				cbSessaoLocal: {
					required: true
				},
				txtSessaoNome: {
					required: true,
					minlength: 3,
					maxlength: 100
				},
				txtSessaoNomeCurto: {
					required: true,
					minlength: 3,
					maxlength: 45
				},
				cbSessaoOcultar: {
					required: true
				},
				cbSessaoCurso: {
					required: true
				},
				cbSessaoFormato: {
					required: true
				},
				cbSessaoTipo: {
					required: true
				},
				cbSessaoVertical: {
					required: true
				},
				txtSessaoPublicoAlvo: {
					maxlength: 100
				}
			},
			submitHandler: function (form) {
				if (JsonWebApi.active)
					return;

				$("#modalAlterarSessao").modal("hide");

				var sessao, s = {
					idevento: idevento,
					ideventodata: parseInt($("#cbSessaoData").val()),
					ideventohorario: parseInt($("#cbSessaoHorario").val()),
					ideventolocal: parseInt($("#cbSessaoLocal").val()),
					nome: trim($("#txtSessaoNome").val()).toUpperCase(),
					nome_curto: trim($("#txtSessaoNomeCurto").val()).toUpperCase(),
					ocultar: parseInt($("#cbSessaoOcultar").val()),
					idcurso: parseInt($("#cbSessaoCurso").val()),
					idformato: parseInt($("#cbSessaoFormato").val()),
					idtiposessao: parseInt($("#cbSessaoTipo").val()),
					idvertical: parseInt($("#cbSessaoVertical").val()),
					publico_alvo: trim($("#txtSessaoPublicoAlvo").val()).toUpperCase(),
					idspalestrante: []
				};

				$("#tabelaSessaoPalestranteBody>tr").each(function (i, tr) { s.idspalestrante.push(parseInt(tr.getAttribute("data-id"))); });

				Notification.wait();

				if (trClicada && (sessao = tabela.row(trClicada).data())) {
					s.id = sessao.id;

					JsonWebApi.post("/api/sessao/alterar", s, function (response) {
						if (response.success) {
							sessao.ideventodata = s.ideventodata;
							sessao.ideventohorario = s.ideventohorario;
							sessao.ideventolocal = s.ideventolocal;
							sessao.nome = s.nome;
							sessao.nome_curto = s.nome_curto;
							sessao.ocultar = s.ocultar;
							sessao.idcurso = s.idcurso;
							sessao.idformato = s.idformato;
							sessao.idtiposessao = s.idtiposessao;
							sessao.idvertical = s.idvertical;
							sessao.publico_alvo = s.publico_alvo;
							sessao.idspalestrante = s.idspalestrante;
							preencherDadosSessao(sessao);
							Notification.success("Sessão alterada com sucesso! \uD83D\uDE04");
							tabela.row(trClicada).invalidate().draw();
						} else {
							Notification.error(response.value, true);
						}
						trClicada = null;
					});
				} else {
					JsonWebApi.post("/api/sessao/criar", s, function (response) {
						if (response.success) {
							s.id = parseInt(response.value);
							preencherDadosSessao(s);
							eventoSessoesPorId[s.id] = s;
							eventoSessoes.push(s);
							Notification.success("Sessão criada com sucesso! \uD83D\uDE04");
							tabela.row.add(s).draw();
						} else {
							Notification.error(response.value, true);
						}
						trClicada = null;
					});
				}
			}
		});

		window.criarSessao = function () {
			if (JsonWebApi.active)
				return;

			trClicada = null;

			resetForm("#formAlterarSessao");

			$("#lblAlterarSessao").text("Criar Sessão");

			$("#modalAlterarSessao").modal({
				backdrop: "static",
				keyboard: true
			});
		};

		window.excluirSessao = function () {
			if (JsonWebApi.active || !trClicada)
				return;

			var sessao = tabela.row(trClicada).data();

			var nome = $("#txtModalExcluirSessao").val().toUpperCase();
			if (nome !== sessao.nome.toUpperCase()) {
				Notification.error("O nome da sessão não confere", true);
				return;
			}

			$("#modalExcluirSessao").modal("hide");

			Notification.wait();

			JsonWebApi.get("/api/sessao/excluir", function (response) {
				if (response.success) {
					delete eventoSessoesPorId[sessao.id];
					for (var i = eventoSessoes.length - 1; i >= 0; i--) {
						if (eventoSessoes[i].id === sessao.id) {
							eventoSessoes.splice(i, 1);
							break;
						}
					}
					Notification.success("Sessão excluída com sucesso! \uD83D\uDE04");
					tabela.row(trClicada).remove().draw();
				} else {
					Notification.error(response.value, true);
				}
				trClicada = null;
			}, "id", sessao.id);
		};
	});

	//]]>
</script>
